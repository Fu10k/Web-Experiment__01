"use strict";
self["webpackHotUpdateweb_experiment_1"]("main",{

/***/ "./shared/shaders/blob-vertex.glsl":
/*!*****************************************!*\
  !*** ./shared/shaders/blob-vertex.glsl ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ("#define GLSLIFY 1\nuniform float uTime;\n\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute float displacement;\n\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat3 normalMatrix;\n\nvarying vec3 vPosition;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying float vDisplacement;\n\n#define PI 3.14159265359\n\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\nfloat noise(vec3 P){\n    vec3 Pi0 = floor(P); // Integer part for indexing\n    vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n    Pi0 = mod(Pi0, 289.0);\n    Pi1 = mod(Pi1, 289.0);\n    vec3 Pf0 = fract(P); // Fractional part for interpolation\n    vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n    vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n    vec4 iy = vec4(Pi0.yy, Pi1.yy);\n    vec4 iz0 = Pi0.zzzz;\n    vec4 iz1 = Pi1.zzzz;\n\n    vec4 ixy = permute(permute(ix) + iy);\n    vec4 ixy0 = permute(ixy + iz0);\n    vec4 ixy1 = permute(ixy + iz1);\n\n    vec4 gx0 = ixy0 / 7.0;\n    vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n    gx0 = fract(gx0);\n    vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n    vec4 sz0 = step(gz0, vec4(0.0));\n    gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n    gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n    vec4 gx1 = ixy1 / 7.0;\n    vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n    gx1 = fract(gx1);\n    vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n    vec4 sz1 = step(gz1, vec4(0.0));\n    gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n    gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n    vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n    vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n    vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n    vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n    vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n    vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n    vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n    vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n    vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n    g000 *= norm0.x;\n    g010 *= norm0.y;\n    g100 *= norm0.z;\n    g110 *= norm0.w;\n    vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n    g001 *= norm1.x;\n    g011 *= norm1.y;\n    g101 *= norm1.z;\n    g111 *= norm1.w;\n\n    float n000 = dot(g000, Pf0);\n    float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n    float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n    float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n    float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n    float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n    float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n    float n111 = dot(g111, Pf1);\n\n    vec3 fade_xyz = fade(Pf0);\n    vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n    vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n    float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n    return 2.2 * n_xyz;\n}\n\nfloat smoothMod(float axis, float amp, float rad) {\n    float top = cos(PI * (axis / amp)) * sin(PI * (axis / amp));\n    float bottom = pow(sin(PI * (axis / amp)), 2.0) + pow(rad, 2.0);\n    float at = atan(top / bottom);\n    return amp * (1.0 / 2.0) - (1.0 / PI) * at;\n}\n\nfloat fit(float unscaled, float originalMin, float originalMax, float minAllowed, float maxAllowed) {\n    return (maxAllowed - minAllowed) * (unscaled - originalMin) / (originalMax - originalMin) + minAllowed;\n}\n\nfloat wave(vec3 position) {\n    return fit(smoothMod(position.y * 6.0, 1.0, 1.5), 0.35, 0.6, 0.0, 1.0);\n}\n\nvoid main() {\n    vec3 coords = normal;\n    coords.y += uTime;\n    vec3 noisePattern = vec3(noise(coords));\n    float pattern = wave(noisePattern);\n\n    vPosition = position;\n    vNormal = normal;\n    vUv = uv;\n    vDisplacement = pattern;\n\n    float displacement = vDisplacement / 3.0;\n    vec3 newPostion = position + normal * displacement;\n    vec4 modelViewPosition = modelViewMatrix * vec4(newPostion, 1.0);\n    vec4 projectedPosition = projectionMatrix * modelViewPosition;\n    gl_Position = projectedPosition;\n}");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("097fdd21a139d498b21c")
/******/ })();
/******/ 
/******/ }
);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi4yN2E4YjEyYjgxNDRmZjU4OTc0ZS5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQSxpRUFBZSx3Q0FBd0MsNEJBQTRCLHdCQUF3QixvQkFBb0IsK0JBQStCLGlDQUFpQyxnQ0FBZ0MsNEJBQTRCLDJCQUEyQix1QkFBdUIsbUJBQW1CLDhCQUE4QixxREFBcUQscUNBQXFDLDZCQUE2QixnREFBZ0QscUJBQXFCLG9DQUFvQyx3QkFBd0IsMkJBQTJCLDhEQUE4RCwrQ0FBK0MsNEJBQTRCLDJCQUEyQixzRUFBc0UseUVBQXlFLHFDQUFxQywwQkFBMEIsMEJBQTBCLDZDQUE2QyxxQ0FBcUMscUNBQXFDLDhCQUE4QiwrQ0FBK0MsdUJBQXVCLGlEQUFpRCxzQ0FBc0MsMENBQTBDLDBDQUEwQyw4QkFBOEIsK0NBQStDLHVCQUF1QixpREFBaUQsc0NBQXNDLDBDQUEwQywwQ0FBMEMsNENBQTRDLDBDQUEwQywwQ0FBMEMsMENBQTBDLDBDQUEwQywwQ0FBMEMsMENBQTBDLDBDQUEwQyw2R0FBNkcsc0JBQXNCLHNCQUFzQixzQkFBc0Isc0JBQXNCLDJHQUEyRyxzQkFBc0Isc0JBQXNCLHNCQUFzQixzQkFBc0Isb0NBQW9DLGtEQUFrRCx3REFBd0Qsa0RBQWtELGtEQUFrRCx3REFBd0Qsa0RBQWtELGtDQUFrQyxrQ0FBa0MsNkZBQTZGLGtEQUFrRCxxREFBcUQseUJBQXlCLEdBQUcsdURBQXVELGtFQUFrRSxzRUFBc0Usb0NBQW9DLGlEQUFpRCxHQUFHLHlHQUF5Ryw2R0FBNkcsR0FBRywrQkFBK0IsNkVBQTZFLEdBQUcsaUJBQWlCLDJCQUEyQix3QkFBd0IsOENBQThDLHlDQUF5Qyw2QkFBNkIsdUJBQXVCLGVBQWUsOEJBQThCLGlEQUFpRCx5REFBeUQsdUVBQXVFLG9FQUFvRSxzQ0FBc0MsR0FBRyxDQUFDOzs7Ozs7OztVQ0F0bUkiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWItZXhwZXJpbWVudC0xLy4vc2hhcmVkL3NoYWRlcnMvYmxvYi12ZXJ0ZXguZ2xzbCIsIndlYnBhY2s6Ly93ZWItZXhwZXJpbWVudC0xL3dlYnBhY2svcnVudGltZS9nZXRGdWxsSGFzaCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIiNkZWZpbmUgR0xTTElGWSAxXFxudW5pZm9ybSBmbG9hdCB1VGltZTtcXG5cXG5hdHRyaWJ1dGUgdmVjMyBwb3NpdGlvbjtcXG5hdHRyaWJ1dGUgdmVjMyBub3JtYWw7XFxuYXR0cmlidXRlIHZlYzIgdXY7XFxuYXR0cmlidXRlIGZsb2F0IGRpc3BsYWNlbWVudDtcXG5cXG51bmlmb3JtIG1hdDQgbW9kZWxWaWV3TWF0cml4O1xcbnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uTWF0cml4O1xcbnVuaWZvcm0gbWF0MyBub3JtYWxNYXRyaXg7XFxuXFxudmFyeWluZyB2ZWMzIHZQb3NpdGlvbjtcXG52YXJ5aW5nIHZlYzMgdk5vcm1hbDtcXG52YXJ5aW5nIHZlYzIgdlV2O1xcbnZhcnlpbmcgZmxvYXQgdkRpc3BsYWNlbWVudDtcXG5cXG4jZGVmaW5lIFBJIDMuMTQxNTkyNjUzNTlcXG5cXG52ZWM0IHBlcm11dGUodmVjNCB4KXtyZXR1cm4gbW9kKCgoeCozNC4wKSsxLjApKngsIDI4OS4wKTt9XFxudmVjNCB0YXlsb3JJbnZTcXJ0KHZlYzQgcil7cmV0dXJuIDEuNzkyODQyOTE0MDAxNTkgLSAwLjg1MzczNDcyMDk1MzE0ICogcjt9XFxudmVjMyBmYWRlKHZlYzMgdCkge3JldHVybiB0KnQqdCoodCoodCo2LjAtMTUuMCkrMTAuMCk7fVxcblxcbmZsb2F0IG5vaXNlKHZlYzMgUCl7XFxuICAgIHZlYzMgUGkwID0gZmxvb3IoUCk7IC8vIEludGVnZXIgcGFydCBmb3IgaW5kZXhpbmdcXG4gICAgdmVjMyBQaTEgPSBQaTAgKyB2ZWMzKDEuMCk7IC8vIEludGVnZXIgcGFydCArIDFcXG4gICAgUGkwID0gbW9kKFBpMCwgMjg5LjApO1xcbiAgICBQaTEgPSBtb2QoUGkxLCAyODkuMCk7XFxuICAgIHZlYzMgUGYwID0gZnJhY3QoUCk7IC8vIEZyYWN0aW9uYWwgcGFydCBmb3IgaW50ZXJwb2xhdGlvblxcbiAgICB2ZWMzIFBmMSA9IFBmMCAtIHZlYzMoMS4wKTsgLy8gRnJhY3Rpb25hbCBwYXJ0IC0gMS4wXFxuICAgIHZlYzQgaXggPSB2ZWM0KFBpMC54LCBQaTEueCwgUGkwLngsIFBpMS54KTtcXG4gICAgdmVjNCBpeSA9IHZlYzQoUGkwLnl5LCBQaTEueXkpO1xcbiAgICB2ZWM0IGl6MCA9IFBpMC56enp6O1xcbiAgICB2ZWM0IGl6MSA9IFBpMS56enp6O1xcblxcbiAgICB2ZWM0IGl4eSA9IHBlcm11dGUocGVybXV0ZShpeCkgKyBpeSk7XFxuICAgIHZlYzQgaXh5MCA9IHBlcm11dGUoaXh5ICsgaXowKTtcXG4gICAgdmVjNCBpeHkxID0gcGVybXV0ZShpeHkgKyBpejEpO1xcblxcbiAgICB2ZWM0IGd4MCA9IGl4eTAgLyA3LjA7XFxuICAgIHZlYzQgZ3kwID0gZnJhY3QoZmxvb3IoZ3gwKSAvIDcuMCkgLSAwLjU7XFxuICAgIGd4MCA9IGZyYWN0KGd4MCk7XFxuICAgIHZlYzQgZ3owID0gdmVjNCgwLjUpIC0gYWJzKGd4MCkgLSBhYnMoZ3kwKTtcXG4gICAgdmVjNCBzejAgPSBzdGVwKGd6MCwgdmVjNCgwLjApKTtcXG4gICAgZ3gwIC09IHN6MCAqIChzdGVwKDAuMCwgZ3gwKSAtIDAuNSk7XFxuICAgIGd5MCAtPSBzejAgKiAoc3RlcCgwLjAsIGd5MCkgLSAwLjUpO1xcblxcbiAgICB2ZWM0IGd4MSA9IGl4eTEgLyA3LjA7XFxuICAgIHZlYzQgZ3kxID0gZnJhY3QoZmxvb3IoZ3gxKSAvIDcuMCkgLSAwLjU7XFxuICAgIGd4MSA9IGZyYWN0KGd4MSk7XFxuICAgIHZlYzQgZ3oxID0gdmVjNCgwLjUpIC0gYWJzKGd4MSkgLSBhYnMoZ3kxKTtcXG4gICAgdmVjNCBzejEgPSBzdGVwKGd6MSwgdmVjNCgwLjApKTtcXG4gICAgZ3gxIC09IHN6MSAqIChzdGVwKDAuMCwgZ3gxKSAtIDAuNSk7XFxuICAgIGd5MSAtPSBzejEgKiAoc3RlcCgwLjAsIGd5MSkgLSAwLjUpO1xcblxcbiAgICB2ZWMzIGcwMDAgPSB2ZWMzKGd4MC54LGd5MC54LGd6MC54KTtcXG4gICAgdmVjMyBnMTAwID0gdmVjMyhneDAueSxneTAueSxnejAueSk7XFxuICAgIHZlYzMgZzAxMCA9IHZlYzMoZ3gwLnosZ3kwLnosZ3owLnopO1xcbiAgICB2ZWMzIGcxMTAgPSB2ZWMzKGd4MC53LGd5MC53LGd6MC53KTtcXG4gICAgdmVjMyBnMDAxID0gdmVjMyhneDEueCxneTEueCxnejEueCk7XFxuICAgIHZlYzMgZzEwMSA9IHZlYzMoZ3gxLnksZ3kxLnksZ3oxLnkpO1xcbiAgICB2ZWMzIGcwMTEgPSB2ZWMzKGd4MS56LGd5MS56LGd6MS56KTtcXG4gICAgdmVjMyBnMTExID0gdmVjMyhneDEudyxneTEudyxnejEudyk7XFxuXFxuICAgIHZlYzQgbm9ybTAgPSB0YXlsb3JJbnZTcXJ0KHZlYzQoZG90KGcwMDAsIGcwMDApLCBkb3QoZzAxMCwgZzAxMCksIGRvdChnMTAwLCBnMTAwKSwgZG90KGcxMTAsIGcxMTApKSk7XFxuICAgIGcwMDAgKj0gbm9ybTAueDtcXG4gICAgZzAxMCAqPSBub3JtMC55O1xcbiAgICBnMTAwICo9IG5vcm0wLno7XFxuICAgIGcxMTAgKj0gbm9ybTAudztcXG4gICAgdmVjNCBub3JtMSA9IHRheWxvckludlNxcnQodmVjNChkb3QoZzAwMSwgZzAwMSksIGRvdChnMDExLCBnMDExKSwgZG90KGcxMDEsIGcxMDEpLCBkb3QoZzExMSwgZzExMSkpKTtcXG4gICAgZzAwMSAqPSBub3JtMS54O1xcbiAgICBnMDExICo9IG5vcm0xLnk7XFxuICAgIGcxMDEgKj0gbm9ybTEuejtcXG4gICAgZzExMSAqPSBub3JtMS53O1xcblxcbiAgICBmbG9hdCBuMDAwID0gZG90KGcwMDAsIFBmMCk7XFxuICAgIGZsb2F0IG4xMDAgPSBkb3QoZzEwMCwgdmVjMyhQZjEueCwgUGYwLnl6KSk7XFxuICAgIGZsb2F0IG4wMTAgPSBkb3QoZzAxMCwgdmVjMyhQZjAueCwgUGYxLnksIFBmMC56KSk7XFxuICAgIGZsb2F0IG4xMTAgPSBkb3QoZzExMCwgdmVjMyhQZjEueHksIFBmMC56KSk7XFxuICAgIGZsb2F0IG4wMDEgPSBkb3QoZzAwMSwgdmVjMyhQZjAueHksIFBmMS56KSk7XFxuICAgIGZsb2F0IG4xMDEgPSBkb3QoZzEwMSwgdmVjMyhQZjEueCwgUGYwLnksIFBmMS56KSk7XFxuICAgIGZsb2F0IG4wMTEgPSBkb3QoZzAxMSwgdmVjMyhQZjAueCwgUGYxLnl6KSk7XFxuICAgIGZsb2F0IG4xMTEgPSBkb3QoZzExMSwgUGYxKTtcXG5cXG4gICAgdmVjMyBmYWRlX3h5eiA9IGZhZGUoUGYwKTtcXG4gICAgdmVjNCBuX3ogPSBtaXgodmVjNChuMDAwLCBuMTAwLCBuMDEwLCBuMTEwKSwgdmVjNChuMDAxLCBuMTAxLCBuMDExLCBuMTExKSwgZmFkZV94eXoueik7XFxuICAgIHZlYzIgbl95eiA9IG1peChuX3oueHksIG5fei56dywgZmFkZV94eXoueSk7XFxuICAgIGZsb2F0IG5feHl6ID0gbWl4KG5feXoueCwgbl95ei55LCBmYWRlX3h5ei54KTsgXFxuICAgIHJldHVybiAyLjIgKiBuX3h5ejtcXG59XFxuXFxuZmxvYXQgc21vb3RoTW9kKGZsb2F0IGF4aXMsIGZsb2F0IGFtcCwgZmxvYXQgcmFkKSB7XFxuICAgIGZsb2F0IHRvcCA9IGNvcyhQSSAqIChheGlzIC8gYW1wKSkgKiBzaW4oUEkgKiAoYXhpcyAvIGFtcCkpO1xcbiAgICBmbG9hdCBib3R0b20gPSBwb3coc2luKFBJICogKGF4aXMgLyBhbXApKSwgMi4wKSArIHBvdyhyYWQsIDIuMCk7XFxuICAgIGZsb2F0IGF0ID0gYXRhbih0b3AgLyBib3R0b20pO1xcbiAgICByZXR1cm4gYW1wICogKDEuMCAvIDIuMCkgLSAoMS4wIC8gUEkpICogYXQ7XFxufVxcblxcbmZsb2F0IGZpdChmbG9hdCB1bnNjYWxlZCwgZmxvYXQgb3JpZ2luYWxNaW4sIGZsb2F0IG9yaWdpbmFsTWF4LCBmbG9hdCBtaW5BbGxvd2VkLCBmbG9hdCBtYXhBbGxvd2VkKSB7XFxuICAgIHJldHVybiAobWF4QWxsb3dlZCAtIG1pbkFsbG93ZWQpICogKHVuc2NhbGVkIC0gb3JpZ2luYWxNaW4pIC8gKG9yaWdpbmFsTWF4IC0gb3JpZ2luYWxNaW4pICsgbWluQWxsb3dlZDtcXG59XFxuXFxuZmxvYXQgd2F2ZSh2ZWMzIHBvc2l0aW9uKSB7XFxuICAgIHJldHVybiBmaXQoc21vb3RoTW9kKHBvc2l0aW9uLnkgKiA2LjAsIDEuMCwgMS41KSwgMC4zNSwgMC42LCAwLjAsIDEuMCk7XFxufVxcblxcbnZvaWQgbWFpbigpIHtcXG4gICAgdmVjMyBjb29yZHMgPSBub3JtYWw7XFxuICAgIGNvb3Jkcy55ICs9IHVUaW1lO1xcbiAgICB2ZWMzIG5vaXNlUGF0dGVybiA9IHZlYzMobm9pc2UoY29vcmRzKSk7XFxuICAgIGZsb2F0IHBhdHRlcm4gPSB3YXZlKG5vaXNlUGF0dGVybik7XFxuXFxuICAgIHZQb3NpdGlvbiA9IHBvc2l0aW9uO1xcbiAgICB2Tm9ybWFsID0gbm9ybWFsO1xcbiAgICB2VXYgPSB1djtcXG4gICAgdkRpc3BsYWNlbWVudCA9IHBhdHRlcm47XFxuXFxuICAgIGZsb2F0IGRpc3BsYWNlbWVudCA9IHZEaXNwbGFjZW1lbnQgLyAzLjA7XFxuICAgIHZlYzMgbmV3UG9zdGlvbiA9IHBvc2l0aW9uICsgbm9ybWFsICogZGlzcGxhY2VtZW50O1xcbiAgICB2ZWM0IG1vZGVsVmlld1Bvc2l0aW9uID0gbW9kZWxWaWV3TWF0cml4ICogdmVjNChuZXdQb3N0aW9uLCAxLjApO1xcbiAgICB2ZWM0IHByb2plY3RlZFBvc2l0aW9uID0gcHJvamVjdGlvbk1hdHJpeCAqIG1vZGVsVmlld1Bvc2l0aW9uO1xcbiAgICBnbF9Qb3NpdGlvbiA9IHByb2plY3RlZFBvc2l0aW9uO1xcbn1cIjsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmggPSAoKSA9PiAoXCIwOTdmZGQyMWExMzlkNDk4YjIxY1wiKSJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==